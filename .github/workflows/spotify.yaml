name: Spotify Terraform
on:
  push:
    branches:
      - main
jobs:
  authenticate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Obtain Spotify Access Token
        id: get_token
        run: python get_spotify_token.py
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REDIRECT_URI: ${{ secrets.SPOTIFY_REDIRECT_URI }}
      - name: Debug Token
        run: echo "Token: ${{ steps.get_token.outputs.spotify_access_token }}"
        env:
          spotify_access_token: ${{ steps.get_token.outputs.spotify_access_token }}
        if: always() # Ensure this runs even if the previous step fails
  terraform:
    needs: authenticate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan -var="spotify_access_token=${{ needs.authenticate.outputs.spotify_access_token }}"
        timeout-minutes: 10
      - name: Terraform Apply
        run: terraform apply -auto-approve -var="spotify_access_token=${{ needs.authenticate.outputs.spotify_access_token }}"
        timeout-minutes: 10
