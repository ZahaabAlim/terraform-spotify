name: Spotify Terraform
on:
  push:
    branches:
      - main
jobs:
  authenticate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Obtain Spotify Access Token
        id: get_token
        run: |
          import base64
          import requests
          import os
          client_id = os.environ['SPOTIFY_CLIENT_ID']
          client_secret = os.environ['SPOTIFY_CLIENT_SECRET']
          redirect_uri = os.environ['SPOTIFY_REDIRECT_URI']
          auth_header = base64.b64encode(f"{client_id}:{client_secret}".encode()).decode()
          headers = {
              "Authorization": f"Basic {auth_header}",
              "Content-Type": "application/x-www-form-urlencoded"
          }
          auth_url = f"https://accounts.spotify.com/authorize?response_type=code&client_id={client_id}&scope=playlist-modify-public&redirect_uri={redirect_uri}"
          print(f"Authorize your app by visiting this url: {auth_url}")
          code = input("Enter the authorization code obtained from the URL: ")
          data = {
              "grant_type": "authorization_code",
              "code": code,
              "redirect_uri": redirect_uri
          }
          response = requests.post('https://accounts.spotify.com/api/token', headers=headers, data=data)
          response_data = response.json()
          access_token = response_data['access_token']
          print(f"::set-output name=spotify_access_token::{access_token}")
        env:
          SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
          SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
          SPOTIFY_REDIRECT_URI: ${{ secrets.SPOTIFY_REDIRECT_URI }}
  terraform:
    needs: authenticate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Plan
        run: terraform plan -var="spotify_access_token=${{ needs.authenticate.outputs.spotify_access_token }}"
      - name: Terraform Apply
        run: terraform apply -auto-approve -var="spotify_access_token=${{ needs.authenticate.outputs.spotify_access_token }}"
